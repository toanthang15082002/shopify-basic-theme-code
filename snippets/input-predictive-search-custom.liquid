{% if settings.enable_search %}
  <div
    x-data="searchComponent"
    id="searchComponent"
    class="relative max-w-6xl w-full ml-4"
    data-search-type="
      {%- case settings.search_results -%}
      {%- when "products_only" -%}product
      {%- when "products_and_collection" -%}product,collection
      {%- when "products_page_and_article" -%}product,page,article
      {%- when "products_and_page" -%}product,page
      {%- else -%}query,product,page,collection,article
      {%- endcase -%}
    "
    data-desktop-limit="{{ settings.desktop_maximum_results }}"
    data-mobile-limit="{{ settings.mobile_maximum_results }}"
  >
    <div class="max-w-[62rem] mx-auto w-full border-b">
      <div class="relative pr-5 lg:pr-0 flex">
        {% if settings.enable_refined_search_box %}
          <div class="md:relative flex items-center flex-shrink-0">
            <div class="inline-flex lg:inline-block border-r mr-2">
              <select class="shadow-none bg-transparent outline-none text-[#574136] hover:text-[#c2a27a] mr-2">
                {% if shop.types.size > 0 %}
                  {% for type in shop.types %}
                    {% if type == '' %}
                      <option value="" class="p-10">All categories</option>
                    {% else %}
                      <option value="{{ type }}" class="">{{ type }}</option>
                    {% endif %}
                  {% endfor %}
                {% else %}
                  <option value="all_categories" class="p-4">All categories</option>
                {% endif %}
              </select>
            </div>
          </div>
        {% endif %}
        <form class="grow" action="/search/suggest.json" method="get" role="search" @submit.prevent>
          <input
            type="text"
            name="q"
            class="peer py-3 pr-[4.5rem] pl-4 lg:pl-2 lg:pr-20 text-left w-full appearance-none relative outline-none shadow-none bg-transparent placeholder:text-current placeholder:opacity-60"
            placeholder="Search..."
            x-model="query"
            @input="fetchResults"
          >
          <button class="absolute none_border w-7 h-7 p-1 top-1/2 -translate-y-1/2 opacity-60 bg-none text-current lg:right-2 right-2">
            <svg
              class="w-5 h-5"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m0 0a7.5 7.5 0 10-10.6-10.6 7.5 7.5 0 0010.6 10.6z"/>
            </svg>
          </button>
        </form>
      </div>
    </div>
  </div>
  <div
    id="search-result"
    class="md:max-h-[50vh] absolute left-1/2 top-full transform -translate-x-1/2 lg:w-[1000px] w-3/4 bg-[#f5f0e8] z-50"
  ></div>
{% endif %}

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('searchComponent', () => {
      const searchType =
        document.getElementById('searchComponent').getAttribute('data-search-type') ||
        'query,product,page,collection,article';

      function getSearchLimit() {
        const isMobile = window.innerWidth <= 1024;
        const desktopSearchLimit = document.getElementById('searchComponent').getAttribute('data-desktop-limit');
        const mobileSearchLimit = document.getElementById('searchComponent').getAttribute('data-mobile-limit');
        return isMobile ? mobileSearchLimit : desktopSearchLimit;
      }

      return {
        query: '',
        open: false,

        async fetchResults() {
          const searchLimit = getSearchLimit();
          const searchUrl = `/search/suggest?q=${this.query}&resources[type]=${searchType}&resources[limit]=${searchLimit}&section_id=predictive-search-custom`;

          try {
            const response = await fetch(searchUrl);
            const data = await response.text();
            if (data) {
              document.getElementById('search-result').innerHTML = data;
            }
            if (response.status == 422) {
              document.getElementById('search-result').style.visibility = 'hidden';
            }
            if (response.status == 200) {
              document.getElementById('search-result').style.visibility = 'visible';
            }
          } catch (error) {
            console.error('Error fetching search results:', error);
          }
        },

        closeResults() {
          this.open = false;
        },
      };
    });
  });
</script>
